{"ast":null,"code":"import _classCallCheck from \"/Users/coderdojo/coder-dojo/react-tinder-cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/coderdojo/coder-dojo/react-tinder-cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/coderdojo/coder-dojo/react-tinder-cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/coderdojo/coder-dojo/react-tinder-cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/coderdojo/coder-dojo/react-tinder-cards/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/coderdojo/coder-dojo/react-tinder-cards/src/index.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n/*\nconst go = document.querySelector('#go');\nReactDOM.render(e(LikeButton), domContainer);\n\n\nconst intro = (\n    <div>\n      <h1>Welcome!</h1>\n      <p>\n        The purpose of this game is to recommend a movie to you based on the choices you\n        choose. Swipe RIGHT if you like a movie, swipe LEFT if you don't like a movie.\n      </p>\n      <p>Press GO when you're ready</p>\n      <input onClick={showCards()} id=\"go\" type=\"submit\" value=\"GO\" />\n    </div>\n      );\n\nconst introStyle = {\n    visibility: \"hidden\",\n};\n\nReactDOM.render(intro, document.getElementById(\"root\"));\nReactDOM.render(<App />, document.getElementById(\"root\"));\n*/\n//const go = document.querySelector('#go');\n\nvar ShowCards =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ShowCards, _Component);\n\n  function ShowCards() {\n    _classCallCheck(this, ShowCards);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ShowCards).apply(this, arguments));\n  }\n\n  _createClass(ShowCards, [{\n    key: \"ShowCards\",\n    value: function ShowCards() {\n      ReactDOM.render(React.createElement(App, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }), document.getElementById(\"root\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var intro = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Welcome!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"The purpose of this game is to recommend a movie to you based on the choices you choose. Swipe RIGHT if you like a movie, swipe LEFT if you don't like a movie.\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Press GO when you're ready\"), React.createElement(\"button\", {\n        id: \"go\",\n        type: \"submit\",\n        value: \"GO\",\n        onClick: ShowCards(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n      return intro;\n    }\n  }]);\n\n  return ShowCards;\n}(Component);\n\nexport default ShowCards; //ReactDOM.render(<App />, document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/coderdojo/coder-dojo/react-tinder-cards/src/index.js"],"names":["React","Component","ReactDOM","App","ShowCards","render","document","getElementById","intro"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAyBA;;IAEMC,S;;;;;;;;;;;;;gCACS;AACPF,MAAAA,QAAQ,CAACG,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB;AACH;;;6BAEO;AACJ,UAAMC,KAAK,GACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2KAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCANF,EAOE;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,IAAI,EAAC,QAArB;AAA8B,QAAA,KAAK,EAAC,IAApC;AAAyC,QAAA,OAAO,EAAEJ,SAAS,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,CADJ;AAYA,aAAOI,KAAP;AACH;;;;EAnBmBP,S;;AAsBxB,eAAeG,SAAf,C,CAEA","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n/*\nconst go = document.querySelector('#go');\nReactDOM.render(e(LikeButton), domContainer);\n\n\nconst intro = (\n    <div>\n      <h1>Welcome!</h1>\n      <p>\n        The purpose of this game is to recommend a movie to you based on the choices you\n        choose. Swipe RIGHT if you like a movie, swipe LEFT if you don't like a movie.\n      </p>\n      <p>Press GO when you're ready</p>\n      <input onClick={showCards()} id=\"go\" type=\"submit\" value=\"GO\" />\n    </div>\n      );\n\nconst introStyle = {\n    visibility: \"hidden\",\n};\n\nReactDOM.render(intro, document.getElementById(\"root\"));\nReactDOM.render(<App />, document.getElementById(\"root\"));\n*/\n\n//const go = document.querySelector('#go');\n\nclass ShowCards extends Component{\n    ShowCards(){\n        ReactDOM.render(<App />, document.getElementById(\"root\"));\n    }\n\n    render(){\n        const intro = (\n            <div>\n              <h1>Welcome!</h1>\n              <p>\n                The purpose of this game is to recommend a movie to you based on the choices you\n                choose. Swipe RIGHT if you like a movie, swipe LEFT if you don't like a movie.\n              </p>\n              <p>Press GO when you're ready</p>\n              <button id=\"go\" type=\"submit\" value=\"GO\" onClick={ShowCards()}/>\n            </div>\n        );\n\n        return intro;\n    }\n}\n\nexport default ShowCards;\n\n//ReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}