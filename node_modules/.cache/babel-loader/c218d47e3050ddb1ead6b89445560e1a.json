{"ast":null,"code":"import _objectSpread from \"/Users/coderdojo/coder-dojo/new/movie-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/Users/coderdojo/coder-dojo/new/movie-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/coderdojo/coder-dojo/new/movie-project/src/components/Deck.js\";\nimport React, { useState } from \"react\";\nimport { useSprings } from \"react-spring/hooks\";\nimport { useGesture } from \"react-with-gesture\";\nimport Card from \"./Card\";\nimport data from \"../data.js\";\nimport \"../styles/Deck.css\";\nvar test = new Set();\nvar movieGenres = [];\n\nfunction left(data) {}\n\n;\n\nfunction right(i, cards) {\n  var genres = cards[i].props.data[i].genre;\n  genres.forEach(function (genre) {\n    return (//test.add(genre)\n      keepScore(genre)\n    );\n  });\n}\n\nvar to = function to(i) {\n  return {\n    x: 0,\n    y: i * -10,\n    scale: 1,\n    rot: -10 + Math.random() * 20,\n    delay: i * 100\n  };\n};\n\nvar from = function from(i) {\n  return {\n    rot: 0,\n    scale: 1.5,\n    y: -1000\n  };\n};\n\nvar trans = function trans(r, s) {\n  return \"perspective(1500px) rotateX(30deg) rotateY(\".concat(r / 10, \"deg) rotateZ(\").concat(r, \"deg) scale(\").concat(s, \")\");\n};\n\nvar scores = {\n  'action': 0,\n  'adventure': 0,\n  'sciFi': 0,\n  'comedy': 0,\n  'drama': 0\n};\n\nfunction keepScore(genre) {\n  if (genre === 'Action') {\n    scores['action'] = scores['action'] + 1;\n  }\n\n  if (genre === 'Adventure') {\n    scores['adventure'] = scores['adventure'] + 1;\n  }\n\n  if (genre === 'Sci-Fi') {\n    scores['sciFi'] = scores['sciFi'] + 1;\n  }\n\n  if (genre === 'Comedy') {\n    scores['comedy'] = scores['comedy'] + 1;\n  }\n\n  if (genre === 'Drama') {\n    scores['drama'] = scores['drama'] + 1;\n  }\n}\n\nfunction findMax(arr) {\n  //let scores = {'action':0,'adventure':0,'sciFi':0,'comedy':0,'drama':0}\n\n  /*\n  arr.forEach(genre => {\n    if (genre === 'action'){\n      action = action + 1\n    }\n  }\n  */\n  console.log(arr[3]);\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] === 'Action') {\n      scores['action'] = scores['action'] + 1;\n    }\n\n    if (arr[i] === 'Adventure') {\n      scores['adventure'] = scores['adventure'] + 1;\n    }\n\n    if (arr[i] === 'Sci-Fi') {\n      scores['sciFi'] = scores['sciFi'] + 1;\n    }\n\n    if (arr[i] === 'Comedy') {\n      scores['comedy'] = scores['comedy'] + 1;\n    }\n\n    if (arr[i] === 'Drama') {\n      scores['drama'] = scores['drama'] + 1;\n    }\n  }\n}\n\nfunction releaseScore() {\n  var maxGenre = \"\";\n  var max = 0;\n\n  for (var key in scores) {\n    //let stringMsg = key + \":\" + scores[key]\n    //alert(stringMsg)\n    if (scores[key] > max) {\n      maxGenre = key;\n      max = scores[key];\n    }\n  }\n\n  var stringMsg = \"Your favourite Genre: \" + maxGenre + \"\\nScore: \" + max;\n  alert(stringMsg);\n}\n\nfunction Deck() {\n  var _useState = useState(function () {\n    return new Set();\n  }),\n      _useState2 = _slicedToArray(_useState, 1),\n      gone = _useState2[0];\n\n  var _useSprings = useSprings(data.length, function (i) {\n    return _objectSpread({}, to(i), {\n      from: from(i)\n    });\n  }),\n      _useSprings2 = _slicedToArray(_useSprings, 2),\n      props = _useSprings2[0],\n      set = _useSprings2[1];\n\n  var bind = useGesture(function (_ref) {\n    var _ref$args = _slicedToArray(_ref.args, 1),\n        index = _ref$args[0],\n        down = _ref.down,\n        _ref$delta = _slicedToArray(_ref.delta, 1),\n        xDelta = _ref$delta[0],\n        distance = _ref.distance,\n        _ref$direction = _slicedToArray(_ref.direction, 1),\n        xDir = _ref$direction[0],\n        velocity = _ref.velocity;\n\n    var trigger = velocity > 0.2;\n    var dir = xDir < 0 ? -1 : 1;\n\n    if (!down && trigger) {\n      dir === -1 ? left(index) : right(index, cards);\n      gone.add(index);\n    }\n\n    set(function (i) {\n      if (index !== i) return;\n      var isGone = gone.has(index);\n      var x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0;\n      var rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0);\n      var scale = down ? 1.1 : 1;\n      return {\n        x: x,\n        rot: rot,\n        scale: scale,\n        delay: undefined,\n        config: {\n          friction: 50,\n          tension: down ? 800 : isGone ? 200 : 500\n        }\n      };\n    });\n\n    if (!down && gone.size === data.length) {\n      //console.log(test)\n      //findMax(test)\n      releaseScore(); //alert(popular)\n      //test.forEach(i => alert(cards[i].props.data[i].genre))\n      //alert(max(test))\n      //alert(cards[1].props.data[1].name);\n      //setTimeout(() => gone.clear() || set(i => to(i)), 600);\n    }\n  });\n  var cards = props.map(function (_ref2, i) {\n    var x = _ref2.x,\n        y = _ref2.y,\n        rot = _ref2.rot,\n        scale = _ref2.scale,\n        name = _ref2.name;\n    return React.createElement(Card, {\n      i: i,\n      x: x,\n      y: y,\n      rot: rot,\n      scale: scale,\n      trans: trans,\n      data: data,\n      bind: bind,\n      name: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    });\n  }); //alert(cards[1].props.data[1].name);\n\n  console.log(\"gone\");\n  console.log(gone);\n  console.log(\"test\");\n  console.log(test);\n  var returnVal = cards;\n  return returnVal;\n}\n\nexport default Deck;\nconsole.log(\"I GOT HERE\");","map":{"version":3,"sources":["/Users/coderdojo/coder-dojo/new/movie-project/src/components/Deck.js"],"names":["React","useState","useSprings","useGesture","Card","data","test","Set","movieGenres","left","right","i","cards","genres","props","genre","forEach","keepScore","to","x","y","scale","rot","Math","random","delay","from","trans","r","s","scores","findMax","arr","console","log","length","releaseScore","maxGenre","max","key","stringMsg","alert","Deck","gone","set","bind","args","index","down","delta","xDelta","distance","direction","xDir","velocity","trigger","dir","add","isGone","has","window","innerWidth","undefined","config","friction","tension","size","map","name","returnVal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useSprings } from \"react-spring/hooks\";\nimport { useGesture } from \"react-with-gesture\";\n\nimport Card from \"./Card\";\nimport data from \"../data.js\";\n\nimport \"../styles/Deck.css\";\nconst test = new Set();\nconst movieGenres = [];\nfunction left(data){};\nfunction right(i, cards){\n  let genres = cards[i].props.data[i].genre\n  genres.forEach(genre =>\n    //test.add(genre)\n    keepScore(genre)\n  )\n  \n}\nconst to = i => ({\n  x: 0,\n  y: i * -10,\n  scale: 1,\n  rot: -10 + Math.random() * 20,\n  delay: i * 100\n});\nconst from = i => ({ rot: 0, scale: 1.5, y: -1000 });\n\nconst trans = (r, s) =>\n  `perspective(1500px) rotateX(30deg) rotateY(${r /\n    10}deg) rotateZ(${r}deg) scale(${s})`;\n\nlet scores = {'action':0,'adventure':0,'sciFi':0,'comedy':0,'drama':0}\n\nfunction keepScore(genre){\n  if (genre === 'Action'){\n    scores['action'] = scores['action'] + 1\n  }\n  if (genre === 'Adventure'){\n    scores['adventure'] = scores['adventure'] + 1\n  }\n  if (genre === 'Sci-Fi'){\n    scores['sciFi'] = scores['sciFi'] + 1\n  }\n  if (genre === 'Comedy'){\n    scores['comedy'] = scores['comedy'] + 1\n  }\n  if (genre === 'Drama'){\n    scores['drama'] = scores['drama'] + 1\n  }\n}\n\nfunction findMax(arr){\n  //let scores = {'action':0,'adventure':0,'sciFi':0,'comedy':0,'drama':0}\n  /*\n  arr.forEach(genre => {\n    if (genre === 'action'){\n      action = action + 1\n    }\n  }\n  */\n  console.log(arr[3])\n  for (var i = 0; i < arr.length; i++) { \n    if (arr[i] === 'Action'){\n      scores['action'] = scores['action'] + 1\n    }\n    if (arr[i] === 'Adventure'){\n      scores['adventure'] = scores['adventure'] + 1\n    }\n    if (arr[i] === 'Sci-Fi'){\n      scores['sciFi'] = scores['sciFi'] + 1\n    }\n    if (arr[i] === 'Comedy'){\n      scores['comedy'] = scores['comedy'] + 1\n    }\n    if (arr[i] === 'Drama'){\n      scores['drama'] = scores['drama'] + 1\n    }\n  }\n}\n\nfunction releaseScore(){\n  let maxGenre = \"\"\n  let max = 0\n  for (var key in scores){\n    //let stringMsg = key + \":\" + scores[key]\n    //alert(stringMsg)\n    if (scores[key] > max){\n      maxGenre = key\n      max = scores[key]\n    }\n  }\n\n  let stringMsg = \"Your favourite Genre: \" + maxGenre + \"\\nScore: \" + max\n  alert(stringMsg)\n}\n\nfunction Deck() {\n  const [gone] = useState(() => new Set());\n\n  const [props, set] = useSprings(data.length, i => ({\n    ...to(i),\n    from: from(i)\n  }));\n\n  const bind = useGesture(\n    ({\n      args: [index],\n      down,\n      delta: [xDelta],\n      distance,\n      direction: [xDir],\n      velocity\n    }) => {\n      const trigger = velocity > 0.2;\n\n      const dir = xDir < 0 ? -1 : 1;\n\n      if (!down && trigger){\n        dir === -1 ? left(index) : right(index, cards);\n        gone.add(index);\n      }\n      set(i => {\n        if (index !== i) return;\n        const isGone = gone.has(index);\n\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0;\n\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0);\n\n        const scale = down ? 1.1 : 1;\n        return {\n          x,\n          rot,\n          scale,\n          delay: undefined,\n          config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 }\n        };\n      });\n\n      if (!down && gone.size === data.length){\n        //console.log(test)\n        //findMax(test)\n        releaseScore()\n        //alert(popular)\n        //test.forEach(i => alert(cards[i].props.data[i].genre))\n        //alert(max(test))\n        //alert(cards[1].props.data[1].name);\n        //setTimeout(() => gone.clear() || set(i => to(i)), 600);\n\n    }}\n  );\n\n  var cards = props.map(({ x, y, rot, scale, name }, i) => (\n    <Card\n      i={i}\n      x={x}\n      y={y}\n      rot={rot}\n      scale={scale}\n      trans={trans}\n      data={data}\n      bind={bind}\n      name={name}\n    />),\n    \n  \n  );\n  \n  //alert(cards[1].props.data[1].name);\n  console.log(\"gone\")\n  console.log(gone)\n  console.log(\"test\")\n  console.log(test)\n  let returnVal = cards\n  return returnVal;\n}\n\nexport default Deck;\nconsole.log(\"I GOT HERE\")\n"]},"metadata":{},"sourceType":"module"}